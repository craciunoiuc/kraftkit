name: buildenvs/base-golang

on:
  push:
    branches: [stable]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [staging]
    paths:
      - 'buildenvs/base.Dockerfile'
      - 'buildenvs/base-golang.Dockerfile'
      - '.github/workflows/base-golang.yaml'
      - '.github/workflows/base.yaml'

jobs:
  base:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to OCI registry
        uses: docker/login-action@v2
        if: ${{ github.event_name == 'push' }}
        with:
          registry: index.unikraft.io
          username: ${{ secrets.REG_USERNAME }}
          password: ${{ secrets.REG_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: oci-images
          path: /tmp

      - name: Load Docker image
        run: |
          for I in /tmp/*.tar; do docker load --input "${I}"; done

      - name: Build OCI image
        uses: docker/build-push-action@v4
        with:
          push: false
          file: ./buildenvs/base.Dockerfile
          tags: kraftkit.sh/base:latest
          platforms: linux/amd64
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/base.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v2
        with:
          name: oci-images
          path: /tmp/base.tar

  base-golang:
    runs-on: ubuntu-latest
    needs: [base]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to OCI registry
        uses: docker/login-action@v2
        if: ${{ github.event_name == 'push' }}
        with:
          registry: index.unikraft.io
          username: ${{ secrets.REG_USERNAME }}
          password: ${{ secrets.REG_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: oci-images
          path: /tmp

      - name: Load Docker image
        run: |
          for I in /tmp/*.tar; do docker load --input "${I}"; done

      - name: Build OCI image
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true
          file: ./buildenvs/base-golang.Dockerfile
          tags: kraftkit.sh/base-golang:latest
          platforms: linux/amd64
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/base-golang.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v2
        with:
          name: oci-images
          path: /tmp/base-golang.tar

      - name: Push OCI Image
        uses: docker/build-push-action@v4
        if: ${{ github.event_name == 'push' }}
        with:
          push: true
          tags: index.unikraft.io/kraftkit.sh/base-golang:latest
          platforms: linux/amd64
          file: ./buildenvs/base-golang.Dockerfile
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}