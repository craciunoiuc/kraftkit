name: Build unikernel images with Unikraft
description: Build, push and run unikernel images with Unikraft.
author: Unikraft

branding:
  icon: package
  color: blue

inputs:
  # Global flags
  log-level:
    description: Log-level of the action
    required: false
    default: info
  
  # Project flags
  workdir:
    description: Path to the project directory.
    required: false
  kraftfile:
    description: Alternative path for the Kraftfile or inline-Kraftfile.
    required: false

  # Build flags
  arch:
    description: Architecture to build for.
    required: false
  plat:
    description: Platform to build for.
    required: false
  target:
    description: Name of the target to build for.
    required: false
  
  # Running flags
  execute:
    description: If to run the unikernel.
    required: false
    default: false

  # Packaging flags
  args:
    description: Arguments to pass to the unikernel.
    required: false
  # Currently only OCI is supported
  format:
    description: Set the output format.
    required: false
  initrd:
    description: Include an initrd at path.
    required: false
  memory:
    description: Set the memory size. String of format "1M"/"1G"/"1K"
    required: false
  name:
    description: Set the name of the output.
    required: true
  output:
    description: Set the output path.
    required: false
  kconfig:
    description: Include all set KConfig with the output.
    required: false
  # Not currently used
  rootfs:
    description: Include a rootfs at path.
    required: false
  # If to push the output to a registry
  push:
    description: Push the output.
    required: false
    default: false

runs:
  using: docker
  image: buildenvs/github-action.Dockerfile
  args:
    - ${{ inputs.log-level != "" && format("--log-level {0}", inputs.log-level) || "--log-level info" }}
    - ${{ inputs.workdir != "" && format("--workdir {0}", inputs.workdir) || "" }}
    - ${{ inputs.kraftfile != "" && format("--kraftfile {0}", inputs.kraftfile) || "" }}
    - ${{ inputs.arch != "" && format("--arch {0}", inputs.arch) || "" }}
    - ${{ inputs.plat != "" && format("--plat {0}", inputs.plat) || "" }}
    - ${{ inputs.target != "" && format("--target {0}", inputs.target) || "" }}
    - ${{ inputs.execute != false && "--execute" || "" }}
    - ${{ inputs.args != "" && format("--args {0}", inputs.args) || "" }}
    - ${{ inputs.format != "" && format("--format {0}", inputs.format) || "" }}
    - ${{ inputs.initrd != "" && format("--initrd {0}", inputs.initrd) || "" }}
    - ${{ inputs.memory != "" && format("--memory {0}", inputs.memory) || "" }}
    - ${{ inputs.name != "" && format("--name {0}", inputs.name) || "" }}
    - ${{ inputs.output != "" && format("--output {0}", inputs.output) || "" }}
    - ${{ inputs.kconfig != false && "--kconfig" || "" }}
    - ${{ inputs.rootfs != "" && format("--rootfs {0}", inputs.rootfs) || "" }}
    - ${{ inputs.push != false && "--push" || "" }}
  